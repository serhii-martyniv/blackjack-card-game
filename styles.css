/* CSS Variables */
:root {
    /* Colors */
    --color-primary: #1e1e2e;
    --color-secondary: #45b26b;
    --color-background: #0f1923;
    --color-surface: #1a2634;
    --color-surface-light: #243444;
    --color-text: #e2e8f0;
    --color-text-light: #f8fafc;
    --color-text-muted: #94a3b8;
    --color-error: #ef4444;
    --color-success: #22c55e;
    --color-warning: #eab308;
    --color-heart-diamond: #ef4444;
    --color-spade-club: #010101;
    --color-button: #45b26b;
    --color-button-hover: #3a9b5c;
    --color-button-disabled: #334155;
    --color-card-bg: #ffffff;
    --color-card-back-primary: #1a4b9c;
    --color-card-back-secondary: #2563eb;
    --color-card-back-pattern: rgba(255, 255, 255, 0.3);
    --color-card-back-accent: rgba(255, 255, 255, 0.7);
    --color-card-border: rgba(255, 255, 255, 0.8);
    --color-card-shadow: rgba(0, 0, 0, 0.2);

    /* Dynamic Spacing */
    --spacing-xs: clamp(2px, 0.5vw, 4px);
    --spacing-sm: clamp(4px, 1vw, 8px);
    --spacing-md: clamp(8px, 2vw, 16px);
    --spacing-lg: clamp(12px, 3vw, 24px);
    --spacing-xl: clamp(16px, 4vw, 32px);

    /* Border Radius */
    --radius-sm: 6px;
    --radius-md: 8px;
    --radius-lg: 12px;

    /* Card Dimensions - Dynamic */
    --card-width: clamp(55px, 16vw, 75px);
    --card-height: calc(var(--card-width) * 1.4);
    --card-overlap: clamp(-25px, -8vw, -15px);

    /* Transitions */
    --transition-fast: 0.2s ease-out;
}

/* Reset & Base Styles */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: 0;
    height: 100vh;
    background: var(--color-background);
    color: var(--color-text);
    font-family: system-ui, -apple-system, 'Segoe UI', Roboto, sans-serif;
    display: grid;
    place-items: center;
    overflow: hidden;
}

.game-container {
    background: var(--color-surface);
    width: 100vw;
    height: 100vh;
    display: grid;
    grid-template-rows: auto 1fr 1fr auto;
    gap: var(--spacing-xs);
    overflow: hidden;
}

h1 {
    font-size: clamp(1.2rem, 4vw, 1.5rem);
    text-align: center;
    padding: var(--spacing-sm);
    color: var(--color-text-light);
}

h2 {
    font-size: clamp(0.8rem, 3vw, 0.9rem);
    color: var(--color-text-light);
    margin-bottom: var(--spacing-sm);
    position: sticky;
    top: 0;
}

.dealer-section,
.player-section {
    background: var(--color-surface-light);
    padding: var(--spacing-md) var(--spacing-xs);
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    min-height: calc(var(--card-height) + var(--spacing-md) * 2);
}

.cards {
    display: flex;
    flex-wrap: nowrap;
    gap: 0;
    justify-content: center;
    align-items: center;
    min-height: var(--card-height);
    padding: 0;
    margin: 0;
}

.card {
    width: var(--card-width);
    height: var(--card-height);
    background: var(--color-card-bg);
    border-radius: var(--radius-sm);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: clamp(1.1rem, 3.2vw, 1.3rem);
    font-weight: 600;
    box-shadow: 
        0 2px 4px var(--color-card-shadow),
        0 0 0 1px var(--color-card-border);
    transition: all var(--transition-fast);
    position: relative;
    margin-right: var(--card-overlap);
    cursor: pointer;
}

.card:last-child {
    margin-right: 0;
}

.card[data-suit="♥"],
.card[data-suit="♦"] {
    color: var(--color-heart-diamond);
}

.card[data-suit="♠"],
.card[data-suit="♣"] {
    color: var(--color-spade-club);
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: 
        0 4px 8px var(--color-card-shadow),
        0 0 0 1px var(--color-card-border);
    z-index: 2;
}

.card:active {
    transform: translateY(-2px);
    box-shadow: 
        0 3px 6px var(--color-card-shadow),
        0 0 0 1px var(--color-card-border);
}

.card.hidden-card {
    background: linear-gradient(135deg, 
        var(--color-card-back-primary) 0%,
        var(--color-card-back-secondary) 100%
    );
    color: transparent;
}

.card.hidden-card::before {
    content: '';
    position: absolute;
    inset: 0;
    margin: 4px;
    border: 2px solid var(--color-card-back-accent);
    border-radius: calc(var(--radius-sm) - 2px);
    background-image: repeating-linear-gradient(
        -45deg,
        var(--color-card-back-pattern) 0px,
        var(--color-card-back-pattern) 2px,
        transparent 2px,
        transparent 6px
    );
}

.card.hidden-card::after {
    content: '';
    position: absolute;
    inset: 8px;
    border: 2px solid var(--color-card-back-accent);
    border-radius: calc(var(--radius-sm) - 4px);
    background: var(--color-card-back-primary);
    background-image: 
        radial-gradient(
            circle at center,
            var(--color-card-back-accent) 0%,
            var(--color-card-back-accent) 30%,
            transparent 30%
        ),
        radial-gradient(
            circle at center,
            var(--color-card-back-pattern) 0%,
            var(--color-card-back-pattern) 20%,
            transparent 20%
        );
    background-size: 100% 100%;
    background-position: center;
    background-repeat: no-repeat;
}

.card.hidden-card:hover {
    transform: translateY(-4px);
    box-shadow: 
        0 4px 8px var(--color-card-shadow),
        0 0 0 2px var(--color-card-back-accent),
        0 0 20px rgba(37, 99, 235, 0.3);
}

.card.hidden-card:active {
    transform: translateY(-2px);
    box-shadow: 
        0 3px 6px var(--color-card-shadow),
        0 0 0 2px var(--color-card-back-accent),
        0 0 10px rgba(37, 99, 235, 0.2);
}

.score {
    font-size: clamp(0.8rem, 2.5vw, 0.9rem);
    text-align: center;
    margin-top: var(--spacing-xs);
    color: var(--color-text-muted);
}

.controls {
    display: flex;
    justify-content: center;
    gap: var(--spacing-sm);
    padding: var(--spacing-sm);
    background: var(--color-surface);
    position: sticky;
    bottom: 0;
}

button {
    padding: var(--spacing-sm) var(--spacing-md);
    min-width: clamp(70px, 20vw, 100px);
    font-size: clamp(0.8rem, 2.5vw, 0.9rem);
    border: none;
    border-radius: var(--radius-sm);
    background: var(--color-button);
    color: var(--color-text-light);
    cursor: pointer;
    transition: all var(--transition-fast);
    touch-action: manipulation;
}

button:hover:not(:disabled) {
    background: var(--color-button-hover);
    transform: translateY(-1px);
}

button:disabled {
    background: var(--color-button-disabled);
    color: var(--color-text-muted);
}

/* Status Bar */
.status-bar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: var(--color-surface);
    padding: var(--spacing-xs) var(--spacing-sm);
    text-align: center;
    font-size: clamp(0.8rem, 2.5vw, 0.9rem);
    transform: translateY(-100%);
    transition: transform var(--transition-fast);
    z-index: 1000;
}

.status-bar.visible {
    transform: translateY(0);
}

.status-bar.win { background: var(--color-success); }
.status-bar.lose { background: var(--color-error); }
.status-bar.draw { background: var(--color-warning); }

/* Mobile Optimizations */
@media (max-width: 400px), (max-height: 600px) {
    .game-container {
        grid-template-rows: auto 1fr 1fr auto;
    }

    h1 {
        font-size: 1rem;
        padding: var(--spacing-xs);
    }

    .controls {
        padding: var(--spacing-xs);
    }

    button {
        padding: var(--spacing-xs) var(--spacing-sm);
        min-width: 60px;
    }

    :root {
        --card-width: clamp(45px, 14vw, 60px);
        --card-overlap: clamp(-20px, -6vw, -12px);
    }

    .card {
        font-size: 1rem;
    }

    .card.hidden-card::before {
        margin: 3px;
    }
    
    .card.hidden-card::after {
        inset: 6px;
    }

    .dealer-section,
    .player-section {
        padding: var(--spacing-sm) var(--spacing-xs);
        min-height: calc(var(--card-height) + var(--spacing-sm) * 2);
    }

    h2 {
        margin-bottom: var(--spacing-xs);
    }
}

/* Landscape Mode */
@media (max-height: 500px) and (orientation: landscape) {
    .game-container {
        grid-template-columns: 1fr auto;
        grid-template-rows: 1fr 1fr;
    }

    h1 {
        display: none;
    }

    .controls {
        grid-column: 2;
        grid-row: 1 / -1;
        flex-direction: column;
        padding: var(--spacing-xs);
    }
}

/* Dark Mode Support */
@media (prefers-color-scheme: dark) {
    :root {
        --color-text: #f8fafc;
        --color-text-light: #ffffff;
    }
}

/* Message Overlay */
.message-overlay {
    position: fixed;
    inset: 0;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 9999;
    display: flex;
    justify-content: center;
    align-items: center;
}

.message-overlay.visible {
    opacity: 1;
    visibility: visible;
}

/* Message */
.message {
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%) scale(0.9);
    background: var(--color-surface);
    padding: var(--spacing-lg) var(--spacing-xl);
    border-radius: var(--radius-lg);
    text-align: center;
    font-size: clamp(1.2rem, 3.5vw, 1.5rem);
    font-weight: 700;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 10000;
    box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.4),
        0 0 0 1px rgba(255, 255, 255, 0.1);
    min-width: min(85vw, 350px);
    border: 2px solid var(--color-surface-light);
    backdrop-filter: blur(8px);
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    color: var(--color-text-light);
    pointer-events: none;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

.message.visible {
    opacity: 1 !important;
    visibility: visible !important;
    transform: translate(-50%, -50%) scale(1);
    pointer-events: auto;
}

.message.win { 
    background: linear-gradient(135deg, 
        var(--color-success) 0%,
        color-mix(in srgb, var(--color-success) 80%, white) 100%
    );
    border-color: color-mix(in srgb, var(--color-success) 60%, white);
    animation: pulse 2s infinite;
}

.message.lose { 
    background: linear-gradient(135deg, 
        var(--color-error) 0%,
        color-mix(in srgb, var(--color-error) 80%, white) 100%
    );
    border-color: color-mix(in srgb, var(--color-error) 60%, white);
    animation: shake 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

.message.draw { 
    background: linear-gradient(135deg, 
        var(--color-warning) 0%,
        color-mix(in srgb, var(--color-warning) 80%, white) 100%
    );
    border-color: color-mix(in srgb, var(--color-warning) 60%, white);
    animation: bounce 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
} 